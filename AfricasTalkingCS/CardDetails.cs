// --------------------------------------------------------------------------------------------------------------------
// <copyright file="CardDetails.cs" company="Africa's Talking">
//   2019
// </copyright>
// <summary>
//   The card details.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace AfricasTalkingCS
{
    /// <summary>
    ///     The card details.
    /// </summary>
    public partial class CardDetails
    {
        /// <summary>
        ///     Gets or sets amount
        ///     This is the amount (in the provided currency) that the mobile subscriber is expected to confirm.
        /// </summary>
        [JsonProperty("amount")]
        public decimal Amount { get; set; }

        /// <summary>
        ///     Gets or sets checkoutToken
        ///     This value contains a checkout token that has been generated by our APIs as as result of charging a user's Payment
        ///     Card in a previous transaction. When using a token, the paymentCard data should NOT be populated.
        /// </summary>
        [JsonProperty("checkoutToken")]
        public string CheckoutToken { get; set; }

        /// <summary>
        ///     Gets or sets currencyCode
        ///     This is the 3-digit ISO format currency code for the value of this transaction (e.g NGN, USD, KES etc).
        /// </summary>
        [JsonProperty("currencyCode")]
        public string CurrencyCode { get; set; }

        /// <summary>
        ///     Gets or sets metadata
        ///     This value contains a map of any metadata that you would like us to associate with this request. You can use this
        ///     field to send data that will map notifications to checkout requests, since we will include it when we send
        ///     notifications once the checkout is complete.
        /// </summary>
        [JsonProperty("metadata")]
        public Dictionary<string, string> Metadata { get; set; }

        /// <summary>
        ///     Gets or sets narration
        ///     A short description of the transaction that can be displayed on the client's statement.
        /// </summary>
        [JsonProperty("narration")]
        public string Narration { get; set; }

        /// <summary>
        ///     Gets or sets paymentCard
        ///     This is a complex type whose structure is described below. It contains the details of the Payment Card to be
        ///     charged in this transaction. Please note that you can EITHER provider this or provider a checkoutToken if you have
        ///     one.
        /// </summary>
        [JsonProperty("paymentCard")]
        public PaymentCard PaymentCard { get; set; }

        /// <summary>
        ///     Gets or sets productName
        ///     This value identifies the Africa's Talking Payment Product that should be used to initiate this transaction.
        /// </summary>
        [JsonProperty("productName")]
        public string ProductName { get; set; }

        /// <summary>
        ///     Gets or sets username
        ///     This is your Africa's Talking username.
        /// </summary>
        [JsonProperty("username")]
        public string Username { get; set; }
    }

    /// <summary>
    ///     The card details.
    /// </summary>
    public partial class CardDetails
    {
        /// <summary>
        ///     Converts Card Details to JSON.
        /// </summary>
        /// <param name="json">
        ///     The JSON.
        /// </param>
        /// <returns>
        ///     The <see cref="CardDetails" />.
        ///     JSON Object
        /// </returns>
        public static CardDetails CardDetailsFromJson(string json)
        {
            return JsonConvert.DeserializeObject<CardDetails>(json, CardDetailsConverter.Settings);
        }
    }
}